(window.webpackJsonp=window.webpackJsonp||[]).push([[41],{224:function(t,e,s){"use strict";s.r(e);var i=s(0),_=Object(i.a)({},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"content"},[t._m(0),t._v(" "),t._m(1),t._v(" "),t._m(2),t._v(" "),t._m(3),t._v(" "),t._m(4),t._v(" "),t._m(5),t._v(" "),t._m(6),t._v(" "),t._m(7),t._v(" "),t._m(8),t._v(" "),t._m(9),t._v(" "),t._m(10),t._v(" "),t._m(11),t._v(" "),t._m(12),t._v(" "),t._m(13),t._v(" "),t._m(14),t._v(" "),s("ul",[s("li",[s("p",[t._v("默认配置 128M。 "),s("Badge",{attrs:{text:"默认",type:"warn"}})],1)]),t._v(" "),t._m(15),t._v(" "),t._m(16),t._v(" "),t._m(17),t._v(" "),t._m(18),t._v(" "),t._m(19),t._v(" "),t._m(20),t._v(" "),t._m(21),t._v(" "),t._m(22)]),t._v(" "),t._m(23),t._v(" "),t._m(24),t._v(" "),t._m(25),t._v(" "),s("ul",[s("li",[s("p",[t._v("默认8M "),s("Badge",{attrs:{text:"默认",type:"warn"}})],1)]),t._v(" "),t._m(26),t._v(" "),t._m(27),t._v(" "),t._m(28),t._v(" "),t._m(29),t._v(" "),t._m(30)]),t._v(" "),t._m(31),t._v(" "),t._m(32),t._v(" "),t._m(33),t._v(" "),s("ul",[s("li",[s("p",[t._v("默认8M "),s("Badge",{attrs:{text:"默认",type:"warn"}})],1)]),t._v(" "),t._m(34),t._v(" "),t._m(35),t._v(" "),t._m(36),t._v(" "),t._m(37)]),t._v(" "),t._m(38),t._v(" "),t._m(39),t._v(" "),t._m(40),t._v(" "),t._m(41),t._m(42),t._v(" "),t._m(43),t._v(" "),t._m(44),t._v(" "),t._m(45),t._v(" "),t._m(46),t._v(" "),t._m(47),t._v(" "),t._m(48),t._v(" "),t._m(49),t._v(" "),t._m(50),t._v(" "),t._m(51),t._v(" "),t._m(52),t._v(" "),t._m(53),t._v(" "),t._m(54),t._v(" "),t._m(55),t._v(" "),t._m(56),t._v(" "),t._m(57),t._v(" "),t._m(58),t._v(" "),t._m(59),t._v(" "),t._m(60),t._v(" "),t._m(61),t._v(" "),t._m(62),t._v(" "),t._m(63),t._v(" "),t._m(64),t._v(" "),t._m(65),t._v(" "),t._m(66),t._v(" "),t._m(67),t._v(" "),t._m(68),t._v(" "),t._m(69),t._v(" "),t._m(70),t._v(" "),t._m(71),t._v(" "),t._m(72)])},[function(){var t=this.$createElement,e=this._self._c||t;return e("h1",{attrs:{id:"缓存配置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#缓存配置","aria-hidden":"true"}},[this._v("#")]),this._v(" 缓存配置")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("数据库属于IO密集型的应用程序，其主职责就是数据的管理及存储工作。")]),this._v(" "),e("li",[this._v("而我们知道，从内存中读取一个数据库的时间是微秒级别，而从一块普通硬盘上读取一个 IO是在毫秒级别，二者相差3个数量级。")]),this._v(" "),e("li",[this._v("所以，要优化数据库，首先第一步需要优化的就是IO，尽可能将磁盘IO转化为内存IO。")]),this._v(" "),e("li",[this._v("从MySQL数据库 IO相关参数(缓存参数)的角度来看看可以通过哪些参数进行IO优化")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"全局缓存"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#全局缓存","aria-hidden":"true"}},[this._v("#")]),this._v(" 全局缓存")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"tip custom-block"},[e("p",{staticClass:"custom-block-title"},[this._v("key_buffer_size")]),this._v(" "),e("p",[this._v("是用于索引块的缓冲区大小。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"tip custom-block"},[e("p",{staticClass:"custom-block-title"},[this._v("innodb_buffer_pool_size")]),this._v(" "),e("p",[this._v("Innodb 缓存数据块和索引键")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"tip custom-block"},[e("p",{staticClass:"custom-block-title"},[this._v("innodb_additional_mem_pool_size")]),this._v(" "),e("p",[this._v("InnoDB存储引擎用来存放数据字典信息以及一些内部数据结构的内存空间大小")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"tip custom-block"},[e("p",{staticClass:"custom-block-title"},[this._v("innodb_log_buffer_size")]),this._v(" "),e("p",[this._v("InnoDB存储引擎的事务日志所使用的缓冲区")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"tip custom-block"},[e("p",{staticClass:"custom-block-title"},[this._v("query_cache_size")]),this._v(" "),e("p",[this._v("主要用来缓存MySQL中的ResultSet")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"key-buffer-size"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#key-buffer-size","aria-hidden":"true"}},[this._v("#")]),this._v(" key-buffer-size")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"tip custom-block"},[e("p",{staticClass:"custom-block-title"},[this._v("key_buffer_size")]),this._v(" "),e("p",[this._v("是用于索引块的缓冲区大小。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"tip custom-block"},[e("p",{staticClass:"custom-block-title"},[this._v("推荐设置")]),this._v(" "),e("p",[this._v("4GB左右的服务器，可以设置为400M")])])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ul",[s("li",[s("p",[t._v("增加它可得到更好处理的索引(对所有读和多重写)，对MyISAM(MySQL表存储的一种类型，可以百度等查看详情)表性能影响最大的一个参数。")])]),t._v(" "),s("li",[s("p",[t._v("如果你使它太大，系统将开始换页并且真的变慢了。严格说是它决定了数据库索引处理的速度，尤其是索引读的速度。")])]),t._v(" "),s("li",[s("p",[t._v("对于内存在4GB左右的服务器该参数可设置为256M或384M.")])]),t._v(" "),s("li",[s("p",[t._v("怎么才能知道key_buffer_size的设置是否合理呢，一般可以检查状态值 "),s("code",[t._v("key_read_requests")]),t._v("和"),s("code",[t._v("key_reads")]),t._v("。")])]),t._v(" "),s("li",[s("p",[t._v("比例key_reads / key_read_requests应该尽可能的低，比如1:100，1:1000 ，1:10000。")])]),t._v(" "),s("li",[s("p",[t._v("相关命令")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("show variables like 'innodb_log_buffer_size' \n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("table",[s("thead",[s("tr",[s("th",[t._v("key")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("value")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("Key_read_requests")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("12395")])]),t._v(" "),s("tr",[s("td",[t._v("Key_reads")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("127")])])])]),t._v(" "),s("ul",[s("li",[t._v("这张图表示，有12395请求，有127个请求在内存中没有找到直接从硬度读取")])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"innodb-buffer-pool-size"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#innodb-buffer-pool-size","aria-hidden":"true"}},[this._v("#")]),this._v(" innodb-buffer-pool-size")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"tip custom-block"},[e("p",{staticClass:"custom-block-title"},[this._v("innodb_buffer_pool_size")]),this._v(" "),e("p",[this._v("Innodb 缓存数据块和索引键")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"tip custom-block"},[e("p",{staticClass:"custom-block-title"},[this._v("推荐设置")]),this._v(" "),e("p",[this._v("如果是单独的MYSQL服务器，建议设置系统内存的80%左右")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("li",[e("p",[this._v("主要针对InnoDB表性能影响最大的一个参数，功能与Key_buffer_size一样")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("li",[e("p",[this._v("InnoDB占用的内存，除innodb_buffer_pool_size用于存储页面缓存数据")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("li",[e("p",[this._v("另外InnoDB 和 MyISAM 存储引擎不同， MyISAM 的 key_buffer_size 只能缓存索引键。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("li",[e("p",[this._v("innodb_buffer_pool_size 可以缓存数据块和索引键。适当的增加这个参数的大小，可以有效的减少 InnoDB 类型的表的磁盘 I/O 。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("li",[e("p",[this._v("当我们操作一个 InnoDB 表的时候，返回的所有数据或者去数据过程中用到的任何一个索引块，都会在这个内存区域中走一遭。")])])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("li",[s("p",[t._v("查看 Innodb_buffer_pool_read等参数 "),s("code",[t._v("show status like 'Innodb_buffer_pool_read%';")])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("key")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("value")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("Innodb_buffer_pool_read_requests")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("193950")])]),t._v(" "),s("tr",[s("td",[t._v("Innodb_buffer_pool_reads")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("527")])])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("li",[e("p",[this._v("命中率计算公式：\n"),e("code",[this._v("( Innodb_buffer_pool_read_requests - Innodb_buffer_pool_read ) / ( Innodb_buffer_pool_read_requests * 100% )")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("li",[e("p",[this._v("相关命令:")]),this._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("show status like 'Innodb_buffer_pool_read%';\nshow variables like 'key_buffer_size';\n")])]),this._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[this._v("1")]),e("br"),e("span",{staticClass:"line-number"},[this._v("2")]),e("br")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"innodb-additional-mem-pool-size"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#innodb-additional-mem-pool-size","aria-hidden":"true"}},[this._v("#")]),this._v(" innodb-additional-mem-pool-size")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"tip custom-block"},[e("p",{staticClass:"custom-block-title"},[this._v("innodb_additional_mem_pool_size")]),this._v(" "),e("p",[this._v("InnoDB存储引擎用来存放数据字典信息以及一些内部数据结构的内存空间大小")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"tip custom-block"},[e("p",{staticClass:"custom-block-title"},[this._v("推荐设置")]),this._v(" "),e("p",[this._v("根据MySQL手册，对于2G内存的机器，推荐值是20M。")]),this._v(" "),e("p",[this._v("32G内存的 100M")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("li",[e("p",[this._v("设置了InnoDB存储引擎用来存放数据字典信息以及一些内部数据结构的内存空间大小")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("li",[e("p",[this._v("当我们一个MySQL Instance中的数据库对象非常多的时候，是需要适当调整该参数的大小以确保所有数据都能存放在内存中提高访问效率的。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("li",[e("p",[this._v("这个参数大小是否足够还是比较容易知道的，因为当过小的时候，MySQL会记录Warning信息到数据库的error log中，这时候你就知道该调整这个参数大小了。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("li",[e("p",[this._v("查看当前系统mysql的error日志  cat  /var/lib/mysql/机器名.error 发现有很多waring警告。所以要调大为20M.")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("li",[e("p",[this._v("相关命令")]),this._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("show variables like 'innodb_additional_mem_pool_size' \n")])]),this._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[this._v("1")]),e("br")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"innodb-log-buffer-size"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#innodb-log-buffer-size","aria-hidden":"true"}},[this._v("#")]),this._v(" innodb-log-buffer-size")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"tip custom-block"},[e("p",{staticClass:"custom-block-title"},[this._v("innodb_log_buffer_size")]),this._v(" "),e("p",[this._v("InnoDB存储引擎的事务日志所使用的缓冲区")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"tip custom-block"},[e("p",{staticClass:"custom-block-title"},[this._v("推荐设置")]),this._v(" "),e("p",[this._v("不建议超过32MB")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("li",[e("p",[this._v("Innodb_log_buffer_size  这是InnoDB存储引擎的事务日志所使用的缓冲区。类似于Binlog Buffer，InnoDB在写事务日志的时候，为了提高性能，也是先将信息写入Innofb Log Buffer中，当满足"),e("code",[this._v("innodb_flush_log_trx_commit")]),this._v("参数所设置的相应条件(或者日志缓冲区写满)之后，才会将日志写到文件 (或者同步到磁盘)中。可以通过innodb_log_buffer_size 参数设置其可以使用的最大内存空间。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("li",[e("p",[this._v("InnoDB 将日志写入日志磁盘文件前的缓冲大小。理想值为 1M 至 8M。大的日志缓冲允许事务运行时不需要将日志保存入磁盘而只到事务被提交(commit)。 因此，如果有大的事务处理，设置大的日志缓冲可以减少磁盘I/O。 在 my.cnf中以数字格式设置。")])])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("li",[s("p",[t._v("注："),s("code",[t._v("innodb_flush_log_trx_commit")]),t._v(" 参数对"),s("code",[t._v("InnoDB Log")]),t._v("的写入性能有非常关键的影响,默认值为1。该参数可以设置为0，1，2，解释如下：")]),t._v(" "),s("ul",[s("li",[t._v("0：log buffer中的数据将以每秒一次的频率写入到log file中，且同时会进行文件系统到磁盘的同步操作，但是每个事务的commit并不会触发任何log buffer 到log file的刷新或者文件系统到磁盘的刷新操作;")]),t._v(" "),s("li",[t._v("1：在每次事务提交的时候将log buffer 中的数据都会写入到log file，同时也会触发文件系统到磁盘的同步;")]),t._v(" "),s("li",[t._v("2：事务提交会触发log buffer到log file的刷新，但并不会触发磁盘文件系统到磁盘的同步。此外，每秒会有一次文件系统到磁盘同步操作。")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("li",[e("p",[this._v("相关命令")]),this._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("show variables like 'innodb_log_buffer_size' \n")])]),this._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[this._v("1")]),e("br")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"query-cache-size"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#query-cache-size","aria-hidden":"true"}},[this._v("#")]),this._v(" query-cache-size")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"tip custom-block"},[e("p",{staticClass:"custom-block-title"},[this._v("query_cache_size")]),this._v(" "),e("p",[this._v("主要用来缓存MySQL中的ResultSet")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[e("p",[this._v("query_cache_size: 主要用来缓存MySQL中的ResultSet，也就是一条SQL语句执行的结果集，所以仅仅只能针对select语句。")])]),this._v(" "),e("li",[e("p",[this._v("当我们打开了 Query Cache功能，MySQL在接受到一条select语句的请求后，如果该语句满足Query Cache的要求(未显式说明不允许使用Query Cache，或者已经显式申明需要使用Query Cache)，MySQL会直接根据预先设定好的HASH算法将接受到的select语句以字符串方式进行hash，然后到Query Cache中直接查找是否已经缓存。")])]),this._v(" "),e("li",[e("p",[this._v("如果已经在缓存中，该select请求就会直接将数据返回，从而省略了后面所有的步骤(如SQL语句的解析，优化器优化以及向存储引擎请求数据等)，极大的提高性能。根据MySQL用户手册，使用查询缓冲最多可以达到238%的效率。")])]),this._v(" "),e("li",[e("p",[this._v("相关命令")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("show global status like 'qcache%';\n")])]),this._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[this._v("1")]),e("br")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"局部缓存"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#局部缓存","aria-hidden":"true"}},[this._v("#")]),this._v(" 局部缓存")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[e("p",[this._v("除了全局缓冲，MySql还会为每个连接发放连接缓冲。个连接到MySQL服务器的线程都需要有自己的缓冲。")])]),this._v(" "),e("li",[e("p",[this._v("大概需要立刻分配256K，甚至在线程空闲时，它们使用默认的线程堆栈，网络缓存等。")])]),this._v(" "),e("li",[e("p",[this._v("事务开始之后，则需要增加更多的空间。运行较小的查询可能仅给指定的线程增加少量的内存消耗，然而如果对数据表做复杂的操作例如扫描、排序或者需要临时表，则需分配大约read_buffer_size，sort_buffer_size，read_rnd_buffer_size，tmp_table_size 大小的内存空间.")])]),this._v(" "),e("li",[e("p",[this._v("不过它们只是在需要的时候才分配，并且在那些操作做完之后就释放了。有的是立刻分配成单独的组块。tmp_table_size 可能高达MySQL所能分配给这个操作的最大内存空间了")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"tip custom-block"},[e("p",{staticClass:"custom-block-title"},[this._v("read_buffer_size")]),this._v(" "),e("p",[this._v("是MySql读入缓冲区大小。对表进行顺序扫描的请求将分配一个读入缓冲区")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"tip custom-block"},[e("p",{staticClass:"custom-block-title"},[this._v("sort_buffer_size")]),this._v(" "),e("p",[this._v("是MySql执行排序使用的缓冲大小。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"tip custom-block"},[e("p",{staticClass:"custom-block-title"},[this._v("read_rnd_buffer_size")]),this._v(" "),e("p",[this._v("是MySql的随机读缓冲区大小。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"tip custom-block"},[e("p",{staticClass:"custom-block-title"},[this._v("tmp_table_size")]),this._v(" "),e("p",[this._v("是MySql的heap （堆积）表缓冲大小。所有联合在一个DML指令内完成，并且大多数联合甚至可以不用临时表即可以完成。大多数临时表是基于内存的(HEAP)表。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"tip custom-block"},[e("p",{staticClass:"custom-block-title"},[this._v("record_buffer")]),this._v(" "),e("p",[this._v("每个进行一个顺序扫描的线程为其扫描的每张表分配这个大小的一个缓冲区")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"tip custom-block"},[e("p",{staticClass:"custom-block-title"},[this._v("table_cache")]),this._v(" "),e("p",[this._v("指定表高速缓存的大小。每当MySQL访问一个表时，如果在表缓冲区中还有空间，该表就被打开并放入其中")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"read-buffer-size"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#read-buffer-size","aria-hidden":"true"}},[this._v("#")]),this._v(" read-buffer-size")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"tip custom-block"},[e("p",{staticClass:"custom-block-title"},[this._v("read_buffer_size")]),this._v(" "),e("p",[this._v("是MySql读入缓冲区大小。对表进行顺序扫描的请求将分配一个读入缓冲区")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"tip custom-block"},[e("p",{staticClass:"custom-block-title"},[this._v("设置说明")]),this._v(" "),e("p",[this._v("默认为2M")])])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ul",[s("li",[s("p",[t._v("read_buffer_size 是MySql读入缓冲区大小。对表进行顺序扫描的请求将分配一个读入缓冲区，MySql会为它分配一段内存缓冲区。")])]),t._v(" "),s("li",[s("p",[t._v("read_buffer_size变量控制这一缓冲区的大小。如果对表的顺序扫描请求非常频繁，并且你认为频繁扫描进行得太慢，可以通过增加该变量值以及内存缓冲区大小提高其性能.")])]),t._v(" "),s("li",[s("p",[t._v("相关命令")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("show variables like 'read_buffer_size'\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"sort-buffer-size"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#sort-buffer-size","aria-hidden":"true"}},[this._v("#")]),this._v(" sort-buffer-size")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"tip custom-block"},[e("p",{staticClass:"custom-block-title"},[this._v("sort_buffer_size")]),this._v(" "),e("p",[this._v("是MySql执行排序使用的缓冲大小。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"tip custom-block"},[e("p",{staticClass:"custom-block-title"},[this._v("设置说明")]),this._v(" "),e("p",[this._v("默认为2M")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[e("p",[this._v("sort_buffer_size是MySql执行排序使用的缓冲大小。如果想要增加ORDER BY的速度，首先看是否可以让MySQL使用索引而不是额外的排序阶段。如果不能，可以尝试增加sort_buffer_size变量的大小")])]),this._v(" "),e("li",[e("p",[this._v("相关命令")]),this._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("show variables like 'sort_buffer_size'\n")])]),this._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[this._v("1")]),e("br")])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"read-rnd-buffer-size"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#read-rnd-buffer-size","aria-hidden":"true"}},[this._v("#")]),this._v(" read-rnd-buffer-size")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"tip custom-block"},[e("p",{staticClass:"custom-block-title"},[this._v("read_rnd_buffer_size")]),this._v(" "),e("p",[this._v("是MySql读入缓冲区大小。对表进行顺序扫描的请求将分配一个读入缓冲区")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"tip custom-block"},[e("p",{staticClass:"custom-block-title"},[this._v("设置说明")]),this._v(" "),e("p",[this._v("默认 8M (8388608)")])])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ul",[s("li",[s("p",[t._v("read_rnd_buffer_size 是MySql的随机读缓冲区大小。当按任意顺序读取行时(例如，按照排序顺序)，将分配一个随机读缓存区。")])]),t._v(" "),s("li",[s("p",[t._v("进行排序查询时，MySql会首先扫描一遍该缓冲，以避免磁盘搜索，提高查询速度，如果需要排序大量数据，可适当调高该值。但MySql会为每个客户连接发放该缓冲空间，所以应尽量适当设置该值，以避免内存开销过大。")])]),t._v(" "),s("li",[s("p",[t._v("相关命令")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("show variables like 'read_rnd_buffer_size'\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"tmp-table-size"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#tmp-table-size","aria-hidden":"true"}},[this._v("#")]),this._v(" tmp-table-size")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"tip custom-block"},[e("p",{staticClass:"custom-block-title"},[this._v("tmp_table_size")]),this._v(" "),e("p",[this._v("是MySql的heap （堆积）表缓冲大小。所有联合在一个DML指令内完成，并且大多数联合甚至可以不用临时表即可以完成。大多数临时表是基于内存的(HEAP)表。")])])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ul",[s("li",[s("p",[t._v("tmp_table_size是MySql的heap （堆积）表缓冲大小。所有联合在一个DML指令内完成，并且大多数联合甚至可以不用临时表即可以完成。大多数临时表是基于内存的(HEAP)表。具有大的记录长度的临时表 (所有列的长度的和)或包含BLOB列的表存储在硬盘上。如果某个内部heap（堆积）表大小超过tmp_table_size，MySQL可以根据需要自")])]),t._v(" "),s("li",[s("p",[t._v("动将内存中的heap表改为基于硬盘的MyISAM表。还可以通过设置tmp_table_size选项来增加临时表的大小。也就是说，如果调高该值，MySql同时将增加heap表的大小，可达到提高联接查询速度的效果。")])]),t._v(" "),s("li",[s("p",[t._v("相关命令")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("show variables like 'tmp_table_size'\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"record-buffer"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#record-buffer","aria-hidden":"true"}},[this._v("#")]),this._v(" record-buffer")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"tip custom-block"},[e("p",{staticClass:"custom-block-title"},[this._v("record_buffer")]),this._v(" "),e("p",[this._v("每个进行一个顺序扫描的线程为其扫描的每张表分配这个大小的一个缓冲区")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"tip custom-block"},[e("p",{staticClass:"custom-block-title"},[this._v("设置说明")]),this._v(" "),e("p",[this._v("默认 128K")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[e("p",[this._v("record_buffer每个进行一个顺序扫描的线程为其扫描的每张表分配这个大小的一个缓冲区。如果你做很多顺序扫描，你可能想要增加该值。")])]),this._v(" "),e("li",[e("p",[this._v("相关命令")]),this._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("\n")])]),this._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[this._v("1")]),e("br")])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"table-cache"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#table-cache","aria-hidden":"true"}},[this._v("#")]),this._v(" table-cache")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"tip custom-block"},[e("p",{staticClass:"custom-block-title"},[this._v("table_cache")]),this._v(" "),e("p",[this._v("指定表高速缓存的大小。每当MySQL访问一个表时，如果在表缓冲区中还有空间，该表就被打开并放入其中")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"tip custom-block"},[e("p",{staticClass:"custom-block-title"},[this._v("设置说明")]),this._v(" "),e("p",[this._v("2G内存默认是256 - 512")]),this._v(" "),e("p",[this._v("mysql手册上给的建议大小 table_cache = max_connections*n, "),e("code",[this._v("n表示查询语句中最大表数")])])])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ul",[s("li",[s("p",[t._v("通过检查峰值时间的状态值Open_tables和Opened_tables，可以决定是否需要增加table_cache的值。")])]),t._v(" "),s("li",[s("p",[t._v("如果你发现open_tables等于table_cache，并且opened_tables在不断增长，那么你就需要增加table_cache的值了")])]),t._v(" "),s("li",[s("p",[t._v("相关命令")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("SHOW STATUS LIKE 'Open%tables';\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("table",[s("thead",[s("tr",[s("th",[t._v("key")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("value")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("Open_tables")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("193950")])]),t._v(" "),s("tr",[s("td",[t._v("Opened_tables")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("527")])])])])])])}],!1,null,null,null);_.options.__file="cache.md";e.default=_.exports}}]);