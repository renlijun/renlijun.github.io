(window.webpackJsonp=window.webpackJsonp||[]).push([[43],{223:function(a,t,e){"use strict";e.r(t);var s=e(0),v=Object(s.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var a=this,t=a.$createElement,e=a._self._c||t;return e("div",{staticClass:"content"},[e("h1",{attrs:{id:"变量"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#变量","aria-hidden":"true"}},[a._v("#")]),a._v(" 变量")]),a._v(" "),e("div",{staticClass:"tip custom-block"},[e("p",{staticClass:"custom-block-title"},[a._v("TIP")]),a._v(" "),e("p",[a._v("PHP是一门弱类型语言，本身不严格区分变量的类型。PHP在变量申明的时候不需要指定类型。PHP在程序运行期间可能进行变量类型的隐示转换。和其他强类型语言一样，程序中也可以进行显示的类型转换。PHP变量可以分为简单类型(int、string、bool)、集合类型(array resource object)和常量(const)。以上所有的变量在底层都是同一种结构 zval。")]),a._v(" "),e("p",[a._v("Zval是zend中另一个非常重要的数据结构，用来标识并实现PHP变量")]),a._v(" "),e("p",[e("code",[a._v("Zval")]),a._v(" "),e("code",[a._v("Zend")]),a._v(" "),e("code",[a._v("PHP变量")])])]),a._v(" "),e("h2",{attrs:{id:"zval结构"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#zval结构","aria-hidden":"true"}},[a._v("#")]),a._v(" Zval结构")]),a._v(" "),e("ul",[e("li",[e("p",[a._v("Zval主要由三部分组成：")]),a._v(" "),e("ul",[e("li",[e("p",[a._v("type：指定了变量所述的类型（整数、字符串、数组等）")])]),a._v(" "),e("li",[e("p",[a._v("refcount&is_ref：用来实现引用计数(后面具体介绍)")])]),a._v(" "),e("li",[e("p",[a._v("value：核心部分，存储了变量的实际数据")]),a._v(" "),e("p",[a._v("Zvalue是用来保存一个变量的实际数据。因为要存储多种类型，所以zvalue是一个union，也由此实现了弱类型。")])])])]),a._v(" "),e("li",[e("p",[a._v("PHP变量类型和其实际存储对应关系如下：")]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("IS_LONG   -> lvalue\nIS_DOUBLE -> dvalue\nIS_ARRAY  -> ht\nIS_STRING -> str\nIS_RESOURCE -> lvalue\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br"),e("span",{staticClass:"line-number"},[a._v("5")]),e("br")])])])]),a._v(" "),e("h3",{attrs:{id:"引用计数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#引用计数","aria-hidden":"true"}},[a._v("#")]),a._v(" 引用计数")]),a._v(" "),e("p",[a._v("引用计数在内存回收、字符串操作等地方使用非常广泛。PHP中的变量就是引用计数的典型应用。")]),a._v(" "),e("h3",{attrs:{id:"整数和浮点数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#整数和浮点数","aria-hidden":"true"}},[a._v("#")]),a._v(" 整数和浮点数")]),a._v(" "),e("p",[a._v("整数、浮点数是PHP中的基础类型之一，也是一个简单型变量。对于整数和浮点数，在zvalue中直接存储对应的值。其类型分别是long和double。")]),a._v(" "),e("p",[a._v("从zvalue结构中可以看出，对于整数类型，和c等强类型语言不同，PHP是不区分int、unsigned int、long、long long等类型的，对它来说，整数只有一种类型也就是long。由此，可以看出，在PHP里面，整数的取值范围是由编译器位数来决定而不是固定不变的。")]),a._v(" "),e("p",[a._v("对于浮点数，类似整数，它也不区分float和double而是统一只有double一种类型。")]),a._v(" "),e("p",[a._v("在PHP中，如果整数范围越界了怎么办？这种情况下会自动转换为double类型，这个一定要小心，很多trick都是由此产生。")]),a._v(" "),e("h3",{attrs:{id:"字符和字符串"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#字符和字符串","aria-hidden":"true"}},[a._v("#")]),a._v(" 字符和字符串")]),a._v(" "),e("p",[a._v("和整数一样，字符变量也是PHP中的基础类型和简单型变量。通过zvalue结构可以看出，在PHP中，字符串是由由指向实际数据的指针和长度结构体组成，这点和c++中的string比较类似。由于通过一个实际变量表示长度，和c不同，它的字符串可以是2进制数据（包含\\0），同时在PHP中，求字符串长度strlen是O(1)操作。")]),a._v(" "),e("p",[a._v("在新增、修改、追加字符串操作时，PHP都会重新分配内存生成新的字符串。最后，出于安全考虑，PHP在生成一个字符串时末尾仍然会添加\\0。")])])}],!1,null,null,null);v.options.__file="var.md";t.default=v.exports}}]);